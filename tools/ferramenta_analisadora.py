from langchain.tools import BaseTool
from langchain_google_genai import ChatGoogleGenerativeAI
from langchain.prompts import ChatPromptTemplate, PromptTemplate
from langchain_core.output_parsers import StrOutputParser, PydanticOutputParser
from langchain_core.exceptions import OutputParserException
from retuns_models.detalhes_extrato import Tabela
from auxiliares.my_models import GEMINI_FLASH, GEMINI_PRO
from auxiliares.my_keys import GEMINI_API_KEY
from auxiliares.my_helper import pdf_to_base64_images
from time import sleep
from google_services.envio_drive import salvar_drive
from google_services.envio_email import enviar
import ast
import json
import os
import time


class FerramentaAnalisadora(BaseTool):
    name: str = "Ferramenta Analisadora de Extratos"
    description: str = """
    Utilize essa ferramenta sempre que for solicitado que voc√™ extraia informa√ß√µes de um extrato.
    Voc√™ deve verificar o .pdf que for mandado para voc√™, extraindo todas as informa√ß√µes que tiver presente no extrato.
    
    # Entradas Requiridas:
    - 'nome_pdf' (str): Nome do extrato que foi anexado, com extens√£o PDF.
    - 'email' (str): Email para o qual o resultado ser√° enviado.
    - 'resp' (str): Nome da pessoa respons√°vel que solicitou a an√°lise
    
    **N√£o** solicitar ao usu√°rio email e resp, o pr√≥prio frontend vai mandar essas duas informa√ß√µes.
    
    Ao explicar a ferramenta para algu√©m, pe√ßa apenas o arquivo anexado, o nome vir√° para voc√™ na requisi√ß√£o. E sempre procure textos curtos para descrever.
    
    Exemplo: {
        "nome_pdf": "CAIXA THT 02.24.pdf",
        "email": "usuario@dominio.com",
        "resp": "Jo√£o da Silva"
        }
    """
    return_direct: bool = True

    def _run(self, acao):
        acao = ast.literal_eval(acao)
        caminho_pdf = acao.get("nome_pdf", "")
        email_destino = acao.get("email", "")
        responsavel = acao.get("resp", "")

        llm = ChatGoogleGenerativeAI(
            api_key=GEMINI_API_KEY,
            model=GEMINI_FLASH
        )

        imagem_extrato = pdf_to_base64_images(f"{caminho_pdf}")

        template_analisador = ChatPromptTemplate.from_messages(
            [
                (
                    "system",
                    """
                    Assuma que voc√™ √© um extrato de informa√ß√µes de extratos.
                    A sua tarefa principal consiste em analisar o extrato, extrair todas as informa√ß√µes que est√£o nele e organizar **todas as transa√ß√µes** em formato de tabela, como se fosse para importar
                    para excel.
                    
                    # REGRAS OBRIGATORIAS
                    - Se encontrar uma tabela, n√£o retorne os dados como descritivo, mas sim como se fosse uma tabela, 
                    onde as colunas s√£o separadas por "|", inclusive com os cabe√ßalhos.
                    - Se o cabecalho/linha de valores possuir (x) campos, voc√™ deve colocar apenas (x-1) "|" para dividir, assim como as c√©lulas, n√£o 
                    colocando na extremidade direita. 
                    -  Procure por um t√≠tulo que descreva a tabela que encontrou. Algo como "Conta Corrente" ou "Poupan√ßa", indicando 
                    a tabela que encontrou. Caso n√£o encontre isso, mas tenha um "Movimenta√ß√£o" ou algo assim
                    pode retornar. Se n√£o possuir nada acima, **n√£o** retorne nada como t√≠tulo.
                    - Se encontrar alguma p√°gina que n√£o possui tabelas, **retorne "N√£o h√° tabelas"** 
                    - Qualquer c√©lula vazia encontrada, deve continuar vazia, n√£o coloque "-" para mostrar que estar vazio.
                    - Lembrar-se que alguns bancos abreviam a palavra "SALDO" para "SDO", ent√£o se come√ßar tanto com "SDO" quanto "SALDO"
                    considerar para o campo de saldo.
                    - Sempre que um valor vier com um sinal negativo "-" tanto do lado direito do n√∫mero, quanto no esquerdo 
                    (MESMO SE TIVER R$ ENTRE O SINAL E O VALOR), **considerar** como cr√©dito.
                    - C√©lulas conjuntas as vezes vem separadas em duas linhas, por√©m sem uma divis√£o de linhas entre elas. Sempre que isso acontecer,
                    considerar como se fosse na mesma c√©lula. **N√£o deixe express√µes vazias como:**
                    | CONSIGAZ CILINDROS LTDA | | | | |
                    - Crit√©rio para considerar nova transa√ß√£o: uma nova linha s√≥ deve iniciar um novo registro se contiver um novo valor, de qualquer
                    outro campo. Caso contr√°rio, assume-se que √© uma continua√ß√£o do descritivo anterior.
                    
                    # EXEMPLO
                    Data | Descri√ß√£o | N¬∫ Documento | Movimentos (R$) Cr√©ditos | Movimentos (R$) D√©bitos | Saldo (R$)
                    --- | --- | --- | --- | --- | ---
                    | PIX ENVIADO FRANCISCO B DE SOUZA S FE | | | 650,71- | |
                    
                    # COMO N√ÉO DEVE SER
                    **Cabe√ßalho das Colunas:** Data, Descri√ß√£o, N¬∫ Documento, Movimentos (R$) Cr√©ditos, Movimentos (R$) D√©bitos, Saldo (R$)

                    **Transa√ß√µes:**

                    *   **Data n√£o especificada (saldo anterior):**
                        *   Descri√ß√£o: PIX ENVIADO R T H SERVICOS E USINAGEN, N¬∫ Documento: 163611, D√©bito: R$ 80.000,00
                        *   Descri√ß√£o: DEBITO PAGAMENTO DE SALARIO PAGSAL: 1 PAGTOS, N¬∫ Documento: 010109, D√©bito: R$ 1.908,04
                        *   Descri√ß√£o: APLICACAO CONTAMAX, D√©bito: R$ 220.573,35, **Saldo: R$ 1.534,77**

                    
                    # FORMATO DE SAIDA
                    Data | Descri√ß√£o | N¬∫ Documento | Movimentos (R$) Cr√©ditos | Movimentos (R$) D√©bitos | Saldo (R$)
                    10/01 | PIX ENVIADO FRANCISCO B DE SOUZA |  |  | 650,71 | 
                    10/01 | PARC 001/001 290000002430 | 002430 |  | 205.466,64 | 
                    10/01 | CHEQUE EMITIDO/DEBITADO | 002606 |  | 618,40 | 
                    11/01 | JUROS SALDO UTILIZ ATE LIMITE |  |  | 1.996,59 | 
                    """
                ),
                (
                    "user",
                    [
                        {
                            "type": "text",
                            "text": "Extraia as informa√ß√µes do extrato e retorne **apenas as tabelas**"
                        },
                        {
                            "type": "image_url",
                            "image_url": {"url": "data:image/jpeg;base64,{imagem_extrato}"}
                        }
                    ]
                )
            ]
        )

        cadeia_analise = template_analisador | llm | StrOutputParser()

        respostas = []
        for i, imagem_extrato_unica in enumerate(imagem_extrato, start=1):
            print(f"\nAnalisando p√°gina {i}...")

            try:
                resposta = cadeia_analise.invoke(
                    {"imagem_extrato": imagem_extrato_unica})
            except OutputParserException as e:
                resposta = str(e)

            respostas.append(f"\n{resposta.strip()}")
            sleep(1)

        resposta_cadeia_extrator = "".join(respostas)

        parser = PydanticOutputParser(pydantic_object=Tabela)

        template_resposta = PromptTemplate(
            template="""
            Voc√™ √© um organizador de tabelas de extratos banc√°rios. Sua tarefa √© pegar um texto com transa√ß√µes financeiras em forma de tabela e format√°-lo seguindo estas regras:

            1. Preencha os campos de datas vazias com a data mais recente anterior.
            2. Remova repeti√ß√µes de cabe√ßalhos que estejam no meio da tabela.
            3. Ignore cabe√ßalhos e rodap√©s de p√°gina como "Extrato Consolidado", "P√°gina 1/13" e similares.

            A resposta deve ser apenas a tabela formatada, como no exemplo abaixo:

            ---
            Exemplo de entrada:
            05/01 | WALK CHEOQ QUINTINO PARDI | - | - | - | -
            Extrato Consolidado
            Data | Descri√ß√£o | N¬∫ Documento | Movimentos (R$) Cr√©ditos | Movimentos (R$) D√©bitos | Saldo (R$)
            --- | --- | --- | --- | --- | ---
            | PIX ENVIADO | - | | 60,00 |

            Exemplo de sa√≠da correta:
            Data | Descri√ß√£o | N¬∫ Documento | (R$) Cr√©ditos | (R$) D√©bitos | Saldo (R$)
            05/01 | WALK CHEOQ QUINTINO PARDI | - | - | - | -
            05/01 | PIX ENVIADO | - | | 60,00 |
            ---

            Texto de entrada:
            <<<br
            {resposta_cadeia}
            >>>

            Lembre-se: **n√£o gere explica√ß√µes, nem c√≥digo, nem texto extra**. Apenas a tabela formatada.
            """,
            input_variables=["resposta_cadeia"]
        )

        cadeia_final = template_resposta | llm | StrOutputParser()

        resposta_final = cadeia_final.invoke(
            {"resposta_cadeia": resposta_cadeia_extrator})

        with open(f"{caminho_pdf.replace(".pdf", "")}.txt", "w", encoding="utf-8") as file:
            file.write(resposta_final)

        time.sleep(2)

        link = salvar_drive(caminho_arquivo=f"{caminho_pdf.replace(".pdf", "")}.txt",
                            resp=responsavel, nome_arquivo=f"{caminho_pdf.replace(".pdf", "")}.txt")

        time.sleep(1)

        email = enviar(destinatario=email_destino,
                       assunto=f"Extrato Solicitado üìÑ - {caminho_pdf.replace(".pdf", "")}", link=link)

        os.remove(f"{caminho_pdf.replace(".pdf", "")}.txt")

        return f"Resumo gerado com sucesso. üòÅ</br> Foi enviado no email üìß: </br> <b>{email}</b>"
